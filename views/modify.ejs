<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        <%= heading || "Editing Page" %>
    </title>
    <link rel="stylesheet" href="/main.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <style>
        .preview-container {
            position: relative;
            display: inline-block;
            margin: 8px;
            vertical-align: top
        }

        .preview-container img {
            max-width: 160px;
            max-height: 120px;
            display: block
        }

        .pdf-thumb {
            width: 200px;
            height: 140px;
            border: 1px solid #ddd;
            display: block
        }

        .actions {
            margin-top: 6px;
            margin-bottom: 6px;
            display: flex;
            gap: 6px
        }

        .preview-container.removed {
            opacity: .4;
            filter: grayscale(1)
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="post">
            <% if (locals.post) { %>
                <h1>
                    <%= heading %>
                </h1>

                <form id="editForm" method="post" action="/posts/<%= post.id %>">
                    <div class="mb-3">
                        <label for="formFileMultiple" class="form-label">Add more files</label>
                        <input class="form-control" type="file" id="formFileMultiple" name="image[]" multiple
                            accept="image/*,application/pdf,.doc,.docx">
                        <div id="frames">
                            <% (post.files || []).forEach(function (url, i) { %>
                                <div class="preview-container existing" data-url="<%= url %>" data-index="<%= i %>">
                                    <% if (/\.(png|jpe?g|gif|webp|bmp|svg)(\?|$)/i.test(url)) { %>
                                        <img src="<%= url %>" alt="existing file">
                                        <% } else if (/\.pdf(\?|$)/i.test(url)) { %>
                                            <iframe src="<%= url %>#toolbar=0" class="pdf-thumb"></iframe>
                                            <a href="<%= url %>" target="_blank">Open PDF</a>
                                            <% } else { %>
                                                <a href="<%= url %>" target="_blank">
                                                    <%= (url.split('/').pop() || 'file' ).split('?')[0] %>
                                                </a>
                                                <% } %>
                                                    <div class="actions">
                                                        <button class="replace-btn" type="button">Replace</button>
                                                        <button class="delete-btn" type="button">âœ–</button>
                                                        <input class="replace-input" type="file" hidden
                                                            accept="image/*,application/pdf,.doc,.docx">
                                                    </div>
                                </div>
                                <% }) %>
                        </div>
                    </div>

                    <textarea name="content" rows="10"><%= post.content %></textarea>
                    <button class="full-width" type="submit">
                        <%= submit %>
                    </button>
                </form>

                <% } else { %>
                    <h1>
                        <%= heading %>
                    </h1>
                    <form id="newPostForm">
                        <div class="mb-3">
                            <label for="formFileMultiple" class="form-label">Multiple files input example</label>
                            <input class="form-control" type="file" id="formFileMultiple" name="image[]" multiple
                                accept="image/*,application/pdf,.doc,.docx">
                            <div id="frames"></div>
                        </div>
                        <textarea name="content" id="content" placeholder="Content" required rows="10"></textarea>
                        <button class="full-width" id="insert" type="submit">
                            <%= submit %>
                        </button>
                    </form>
                    <% } %>
        </div>
    </div>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.4/firebase-app.js";
        import {
            getStorage, ref as storageRef, getDownloadURL, uploadBytes
        } from "https://www.gstatic.com/firebasejs/10.12.4/firebase-storage.js";
        import {
            getDatabase, ref, set, update
        } from "https://www.gstatic.com/firebasejs/10.12.4/firebase-database.js";
        import firebaseConfig from "/js/firebase.js";

        const app = initializeApp(firebaseConfig);
        const db = getDatabase(app);
        const storage = getStorage(app);

        // Track per-item replacements for existing files
        const replacements = new Map(); // index -> File

        document.addEventListener("DOMContentLoaded", () => {
            // NEW (create)
            const newForm = document.getElementById("newPostForm");
            newForm?.addEventListener("submit", onCreatePost);

            // EDIT (update)
            const editForm = document.getElementById("editForm");
            editForm?.addEventListener("submit", onEditPost);

            // Existing file actions (replace/remove)
            document.querySelectorAll("#frames .existing").forEach((box) => {
                const idx = Number(box.dataset.index);
                const replaceBtn = box.querySelector(".replace-btn");
                const deleteBtn = box.querySelector(".delete-btn");
                const replaceInp = box.querySelector(".replace-input");

                replaceBtn?.addEventListener("click", () => replaceInp.click());
                replaceInp?.addEventListener("change", (e) => handleReplacePick(e, box, idx));
                deleteBtn?.addEventListener("click", () => {
                    box.classList.toggle("removed");
                    if (box.classList.contains("removed")) replacements.delete(idx);
                });
            });

            // Live preview for newly selected files
            $('#formFileMultiple').change(function () {
                // keep existing previews; just append new previews below them
                // if you want to clear only the NEW previews area, use another div
                for (let i = 0; i < this.files.length; i++) {
                    const file = this.files[i];
                    const c = $('<div class="preview-container"></div>');
                    const del = $('<button class="delete-btn" type="button">&times;</button>');

                    if (file.type.startsWith('image/')) {
                        c.append($('<img alt="preview">').attr("src", URL.createObjectURL(file)));
                    } else if (file.type === 'application/pdf') {
                        c.append('<p>' + file.name + ' (PDF to be uploaded)</p>');
                    } else {
                        c.append('<p>' + file.name + '</p>');
                    }
                    c.append(del);
                    $("#frames").append(c);
                    del.on('click', () => c.remove());
                }
            });
        });

        async function onCreatePost(e) {
            e.preventDefault();
            const content = document.getElementById("content").value;
            const files = document.getElementById("formFileMultiple").files;
            const urls = [];
            for (const f of files) urls.push(await uploadOne(f));
            await set(ref(db, "posts/" + Date.now()), { content, files: urls });
            window.location.href = "/admin";
        }

        async function onEditPost(e) {
            e.preventDefault();
            const form = e.currentTarget;
            const id = form.action.split("/").pop();
            const content = form.querySelector("textarea[name='content']").value;

            // existing boxes in DOM order
            const boxes = Array.from(document.querySelectorAll("#frames .existing"));
            const existingUrls = boxes.map(el => el.dataset.url);
            const finalUrls = [];

            // keep or replace existing
            for (let i = 0; i < boxes.length; i++) {
                const box = boxes[i];
                if (box.classList.contains("removed")) continue;

                if (replacements.has(i)) {
                    const file = replacements.get(i);
                    const newUrl = await uploadOne(file);
                    finalUrls.push(newUrl);
                } else {
                    finalUrls.push(existingUrls[i]);
                }
            }

            // add new files (selected in the main file input)
            const newFiles = document.getElementById("formFileMultiple").files;
            for (const f of newFiles) finalUrls.push(await uploadOne(f));

            await update(ref(db, "posts/" + id), { content, files: finalUrls });
            window.location.href = "/admin";
        }

        function handleReplacePick(e, box, idx) {
            const file = e.target.files?.[0];
            if (!file) return;
            replacements.set(idx, file);
            box.classList.add("replaced");

            // Update visual preview
            if (file.type.startsWith("image/")) {
                const imgURL = URL.createObjectURL(file);
                const oldImg = box.querySelector("img");
                const oldIframe = box.querySelector("iframe");
                if (oldIframe) oldIframe.remove();
                if (oldImg) oldImg.src = imgURL;
                else {
                    const img = document.createElement("img");
                    img.src = imgURL;
                    img.alt = "replacement preview";
                    box.prepend(img);
                }
            } else if (file.type === "application/pdf") {
                const oldImg = box.querySelector("img");
                if (oldImg) oldImg.remove();
                const oldIframe = box.querySelector("iframe");
                if (oldIframe) oldIframe.remove();
                const note = box.querySelector("a") || document.createElement("a");
                note.removeAttribute("href");
                note.textContent = file.name + " (PDF to be uploaded)";
                if (!note.parentNode) box.prepend(note);
            } else {
                const oldImg = box.querySelector("img");
                if (oldImg) oldImg.remove();
                const oldIframe = box.querySelector("iframe");
                if (oldIframe) oldIframe.remove();
                const note = box.querySelector("a") || document.createElement("a");
                note.removeAttribute("href");
                note.textContent = file.name + " (to be uploaded)";
                if (!note.parentNode) box.preend(note);
            }
        }

        async function uploadOne(file) {
            const unique = `${Date.now()}_${Math.random().toString(36).slice(2)}_${file.name}`;
            const refPath = storageRef(storage, `files/${unique}`);
            await uploadBytes(refPath, file);
            return await getDownloadURL(refPath);
        }
    </script>

    <%- include("partials/footer.ejs") %>
</body>

</html>